# coding=utf-8# @author   ：迷心兔# time      ：2019/11/10from django.test import TestCasefrom django.urls import resolve, reversefrom django.utils import timezonefrom ..models import Postfrom ..views import post_listfrom django.contrib.auth.models import User# 测试首页class HomeTests(TestCase):    def setUp(self):        self.username = "mi"        self.password = "123456"        user = User.objects.create_user(username = self.username, password = self.password)        self.post = Post.objects.create(            author = user,            title = "test title",            text = "test text",            created_date = timezone.now( ),            published_date = timezone.now( ),        )        self.home_url = reverse('post_list')# 没有登陆的测试class NotLoginHomeTests(HomeTests):    def setUp(self):        super( ).setUp( )        self.response = self.client.get(self.home_url)    # 测试成功响应码    def test_view_home_success_status_code(self):        self.assertEquals(self.response.status_code, 200)    # 测试链接能正常显示    def test_url_home_resolves_view(self):        view = resolve('/blog/')        self.assertEquals(view.func, post_list)    # 测试页面中是否包含某些链接    def test_view_home_contains_navigation_links(self):        login_url = reverse('login')  # 登陆链接        board_topics_url = reverse('post_detail', kwargs = {'pk': self.post.pk})  # 详情链接        self.assertContains(self.response, 'href="{0}"'.format(login_url))        self.assertContains(self.response, 'href="{0}"'.format(board_topics_url))# 成功登陆的测试class LoginSuccessHomeTests(HomeTests):    def setUp(self):        super( ).setUp( )        self.client.login(username = self.username, password = self.password)        self.response = self.client.get(self.home_url)    # 测试成功响应码    def test_view_home_success_status_code(self):        self.assertEquals(self.response.status_code, 200)    # 测试链接能正常显示    def test_url_home_resolves_view(self):        view = resolve('/blog/')        self.assertEquals(view.func, post_list)    # 测试页面中是否包含某些链接    def test_view_home_contains_navigation_links(self):        logout_url = reverse('logout')  # 退出链接        post_new_url = reverse('post_new')  # 新建链接        board_topics_url = reverse('post_detail', kwargs = {'pk': self.post.pk})  # 详情链接        self.assertContains(self.response, 'href="{0}"'.format(logout_url))        self.assertContains(self.response, 'href="{0}"'.format(post_new_url))        self.assertContains(self.response, 'href="{0}"'.format(board_topics_url))