# coding=utf-8# @author   ：迷心兔# time      ：2019/11/10from django import formsfrom django.test import TestCasefrom ..templatetags.form_tags import field_type, input_class# 模拟登陆表单class ExampleForm(forms.Form):    username = forms.CharField( )    password = forms.CharField(widget = forms.PasswordInput( ))    class Meta:        fields = ('username', 'password')# 测试登陆页面的组件class FieldTypeTests(TestCase):    # 测试字段小部件类型    def test_field_widget_type(self):        form = ExampleForm( )        self.assertEquals('TextInput', field_type(form['username']))        self.assertEquals('PasswordInput', field_type(form['password']))# 用户名或密码输入测试class InputClassTests(TestCase):    # 没有输入数据的测试    def test_unbound_field_initial_state(self):        form = ExampleForm( )  # unbound form        self.assertEquals('form-control ', input_class(form['username']))    # 输入错误数据的测试    def test_valid_bound_field(self):        form = ExampleForm({'username': 'john', 'password': '123'})  # bound form (field + data)        self.assertEquals('form-control is-valid', input_class(form['username']))        self.assertEquals('form-control ', input_class(form['password']))  #    # 输入数据不完整的测试    def test_invalid_bound_field(self):        form = ExampleForm({'username': '', 'password': '123'})  # bound form (field + data)        self.assertEquals('form-control is-invalid', input_class(form['username']))